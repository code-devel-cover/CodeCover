{
    "swagger": "2.0",
    "info": {
        "description": "REST API for CodeCover",
        "title": "CodeCover API",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {},
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/api/v1",
    "paths": {
        "/reports/{id}": {
            "get": {
                "tags": [
                    "Report"
                ],
                "summary": "get reports for the report id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "report id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "boolean",
                        "description": "get only the latest report",
                        "name": "latest",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "get report for git ref",
                        "name": "ref",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "coverage report",
                        "schema": {
                            "$ref": "#/definitions/core.Report"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Report"
                ],
                "summary": "Upload coverage report",
                "parameters": [
                    {
                        "type": "string",
                        "description": "report id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "report",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Git commit SHA",
                        "name": "commit",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "report type",
                        "name": "type",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ref",
                        "name": "ref",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "files list of the repository",
                        "name": "files",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "error message",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/reports/{id}/badge": {
            "get": {
                "tags": [
                    "Report"
                ],
                "summary": "get badge for the report id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "report id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "boolean",
                        "description": "get latest report in main branch",
                        "name": "latest",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "badge svg",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/reports/{id}/card": {
            "get": {
                "produces": [
                    "image/svg+xml"
                ],
                "tags": [
                    "Report"
                ],
                "summary": "Get status card of the repository",
                "parameters": [
                    {
                        "type": "string",
                        "description": "report id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "treemap svg",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/reports/{id}/comment/{number}": {
            "post": {
                "tags": [
                    "Report"
                ],
                "summary": "Leave a report summary comment on pull request",
                "parameters": [
                    {
                        "type": "string",
                        "description": "report id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "pull request number",
                        "name": "number",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/reports/{id}/repo": {
            "get": {
                "tags": [
                    "Report"
                ],
                "summary": "get repository of the report id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "report id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "repository",
                        "schema": {
                            "$ref": "#/definitions/core.Repo"
                        }
                    },
                    "400": {
                        "description": "error message",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/reports/{id}/treemap/{ref}": {
            "get": {
                "produces": [
                    "image/svg+xml"
                ],
                "tags": [
                    "Report"
                ],
                "summary": "Get coverage difference treemap with main branch",
                "parameters": [
                    {
                        "type": "string",
                        "description": "report id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "source branch",
                        "name": "source",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "treemap svg",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/repos": {
            "get": {
                "tags": [
                    "Repository"
                ],
                "summary": "List repositories for all available SCM providers",
                "responses": {
                    "200": {
                        "description": "repositories",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/core.Repo"
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Repository"
                ],
                "summary": "Create new repository for code coverage",
                "parameters": [
                    {
                        "description": "repository to create",
                        "name": "repo",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/core.Repo"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Created repository",
                        "schema": {
                            "$ref": "#/definitions/core.Repo"
                        }
                    }
                }
            }
        },
        "/repos/{scm}": {
            "get": {
                "tags": [
                    "Repository"
                ],
                "summary": "List repositories",
                "parameters": [
                    {
                        "type": "string",
                        "description": "SCM source (github, gitea)",
                        "name": "scm",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "repositories",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/core.Repo"
                            }
                        }
                    }
                }
            }
        },
        "/repos/{scm}/{namespace}/{name}": {
            "get": {
                "tags": [
                    "Repository"
                ],
                "summary": "get repository",
                "parameters": [
                    {
                        "type": "string",
                        "description": "SCM",
                        "name": "scm",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/core.Repo"
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "Repository"
                ],
                "summary": "sync repository information with SCM",
                "parameters": [
                    {
                        "type": "string",
                        "description": "SCM",
                        "name": "scm",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/core.Repo"
                        }
                    }
                }
            }
        },
        "/repos/{scm}/{namespace}/{name}/branches": {
            "get": {
                "tags": [
                    "Repository"
                ],
                "summary": "list repository branches",
                "parameters": [
                    {
                        "type": "string",
                        "description": "SCM",
                        "name": "scm",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/repos/{scm}/{namespace}/{name}/commits": {
            "get": {
                "tags": [
                    "Repository"
                ],
                "summary": "list recent commits",
                "parameters": [
                    {
                        "type": "string",
                        "description": "SCM",
                        "name": "scm",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "branch to list commits from",
                        "name": "ref",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/core.Commit"
                            }
                        }
                    }
                }
            }
        },
        "/repos/{scm}/{namespace}/{name}/content/{path}": {
            "get": {
                "tags": [
                    "Repository"
                ],
                "summary": "Get a file content",
                "parameters": [
                    {
                        "type": "string",
                        "description": "SCM",
                        "name": "scm",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "file path",
                        "name": "path",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "specify git ref, default main branch",
                        "name": "ref",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "file content",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/repos/{scm}/{namespace}/{name}/files": {
            "get": {
                "tags": [
                    "Repository"
                ],
                "summary": "List all files in repository",
                "parameters": [
                    {
                        "type": "string",
                        "description": "SCM",
                        "name": "scm",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "specify git ref, default main branch",
                        "name": "ref",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "files",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/repos/{scm}/{namespace}/{name}/hook": {
            "post": {
                "tags": [
                    "Repository"
                ],
                "summary": "handle webhook event",
                "parameters": [
                    {
                        "type": "string",
                        "description": "SCM",
                        "name": "scm",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/repos/{scm}/{namespace}/{name}/hook/create": {
            "post": {
                "tags": [
                    "Repository"
                ],
                "summary": "create repository webhook",
                "parameters": [
                    {
                        "type": "string",
                        "description": "SCM",
                        "name": "scm",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/repos/{scm}/{namespace}/{name}/report": {
            "patch": {
                "tags": [
                    "Repository"
                ],
                "summary": "renew repository report id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "SCM",
                        "name": "scm",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "updated repository",
                        "schema": {
                            "$ref": "#/definitions/core.Repo"
                        }
                    }
                }
            }
        },
        "/repos/{scm}/{namespace}/{name}/setting": {
            "get": {
                "tags": [
                    "Repository"
                ],
                "summary": "get repository setting",
                "parameters": [
                    {
                        "type": "string",
                        "description": "SCM",
                        "name": "scm",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/core.RepoSetting"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Repository"
                ],
                "summary": "update repository setting",
                "parameters": [
                    {
                        "type": "string",
                        "description": "SCM",
                        "name": "scm",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "repository setting",
                        "name": "setting",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/core.RepoSetting"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/core.RepoSetting"
                        }
                    }
                }
            }
        },
        "/user": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Get login user",
                "responses": {
                    "200": {
                        "description": "user",
                        "schema": {
                            "$ref": "#/definitions/user.User"
                        }
                    },
                    "404": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/user/owner/{scm}/{namespace}/{name}": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Get repository's owner",
                "parameters": [
                    {
                        "type": "string",
                        "description": "SCM",
                        "name": "scm",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "owner",
                        "schema": {
                            "$ref": "#/definitions/user.User"
                        }
                    }
                }
            }
        },
        "/user/repos": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "List user synchronized repositories",
                "responses": {
                    "200": {
                        "description": "list of repositories",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/core.Repo"
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "User"
                ],
                "summary": "Synchronize user's repository from remote SCM",
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/user/scm": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Get user's SCM binding state",
                "responses": {
                    "200": {
                        "description": "providers",
                        "schema": {
                            "$ref": "#/definitions/user.Providers"
                        }
                    },
                    "404": {
                        "description": "providers",
                        "schema": {
                            "$ref": "#/definitions/user.Providers"
                        }
                    }
                }
            }
        },
        "/user/tokens": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "list OAuth tokens",
                "responses": {
                    "200": {
                        "description": "list of tokens",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/user.Token"
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "create OAuth token",
                "parameters": [
                    {
                        "type": "string",
                        "description": "token name",
                        "name": "name",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/user/tokens/{id}": {
            "delete": {
                "tags": [
                    "User"
                ],
                "summary": "delete token with id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "token id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "deleted token",
                        "schema": {
                            "$ref": "#/definitions/user.Token"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "core.Commit": {
            "type": "object",
            "properties": {
                "committer": {
                    "type": "string"
                },
                "committerAvatar": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "sha": {
                    "type": "string"
                }
            }
        },
        "core.Repo": {
            "type": "object",
            "properties": {
                "branch": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "nameSpace": {
                    "type": "string"
                },
                "private": {
                    "type": "boolean"
                },
                "reportID": {
                    "type": "string"
                },
                "scm": {
                    "type": "SCMProvider"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "core.RepoSetting": {
            "type": "object",
            "properties": {
                "filters": {
                    "type": "FileNameFilters"
                },
                "mergePR": {
                    "type": "boolean"
                },
                "protected": {
                    "type": "boolean"
                },
                "updateAction": {
                    "type": "ReportUpdateAction"
                }
            }
        },
        "core.Report": {
            "type": "object",
            "properties": {
                "commit": {
                    "type": "string"
                },
                "coverages": {
                    "type": "array",
                    "items": {
                        "type": "CoverageReport"
                    }
                },
                "createdAt": {
                    "type": "string"
                },
                "files": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "reference": {
                    "type": "string"
                },
                "reportID": {
                    "type": "string"
                }
            }
        },
        "user.Providers": {
            "type": "object",
            "additionalProperties": {
                "type": "boolean"
            }
        },
        "user.Token": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "user.User": {
            "type": "object",
            "properties": {
                "avatar": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "login": {
                    "type": "string"
                }
            }
        }
    }
}